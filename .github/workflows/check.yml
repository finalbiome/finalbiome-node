name: Check Set-Up & Format

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CARGO_INCREMENTAL: 0
  CARGO_PROFILE_RELEASE_LTO: thin

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  check:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set-Up
        run: sudo apt install -y git clang lldb lld curl libssl-dev llvm libudev-dev

      - name: Install Rustup
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source ~/.cargo/env
          rustup default stable
          rustup update nightly
          rustup update stable
          rustup target add wasm32-unknown-unknown --toolchain nightly
          rustup component add clippy
          rustflags=(
            "-C link-arg=-fuse-ld=lld"
            "-C link-arg=-Wl,--compress-debug-sections=zlib"
            "-C force-frame-pointers=yes"
            )
          export RUSTFLAGS="${rustflags[*]}"
          

      - name: Toolchain info
        run: |
          clang --version
          cargo --version --verbose
          rustc --version
          cargo clippy --version 
      
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check Format Code
        run: |
          cargo +nightly fmt -- --check

      - name: Check Code
        run: |
          cargo clippy --locked -p "pallet-*" -- -D warnings
      
      - name: Tests
        run: |
          cargo test --locked
      
      - name: Check Build
        run: |
          SKIP_WASM_BUILD=1 cargo check --release

      # - name: Check Build for Benchmarking
      #   run: >
      #     pushd node &&
      #     cargo check --features=runtime-benchmarks --release

  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set-Up
        run: sudo apt install -y git clang lldb lld curl libssl-dev llvm libudev-dev

      - name: Install Rustup
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source ~/.cargo/env
          rustup default stable
          rustup update nightly
          rustup update stable
          rustup target add wasm32-unknown-unknown --toolchain nightly
          rustup component add clippy
          rustflags=(
            "-C link-arg=-fuse-ld=lld"
            "-C link-arg=-Wl,--compress-debug-sections=zlib"
            "-C force-frame-pointers=yes"
            )
          export RUSTFLAGS="${rustflags[*]}"
          

      - name: Toolchain info
        run: |
          clang --version
          cargo --version --verbose
          rustc --version
          cargo clippy --version 
      
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-build-release-${{ hashFiles('**/Cargo.lock') }}
      - name: Build
        run: |
          cargo build --release
